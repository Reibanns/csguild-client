/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Authentication API
 * A comprehensive NestJS authentication API with PostgreSQL & Prisma.  ### Features - JWT Authentication with Access & Refresh tokens - Google OAuth2 integration - Local authentication (email/password) - Cookie-based token storage - Protected routes with guards  ### Authentication This API uses JWT tokens stored in HTTP-only cookies for authentication.  1. Local Authentication 2. Google OAuth
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ProjectOwnerDto } from './project-owner-dto';
// May contain unused imports in some cases
// @ts-ignore
import { ProjectRoleDto } from './project-role-dto';

/**
 * 
 * @export
 * @interface ProjectSummaryDto
 */
export interface ProjectSummaryDto {
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'description': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProjectSummaryDto
     */
    'tags': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'dueDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'status': ProjectSummaryDtoStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ProjectSummaryDto
     */
    'createdAt': string;
    /**
     * 
     * @type {ProjectOwnerDto}
     * @memberof ProjectSummaryDto
     */
    'owner': ProjectOwnerDto;
    /**
     * 
     * @type {Array<ProjectRoleDto>}
     * @memberof ProjectSummaryDto
     */
    'roles': Array<ProjectRoleDto>;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryDto
     */
    'memberCount': number;
    /**
     * 
     * @type {number}
     * @memberof ProjectSummaryDto
     */
    'applicationCount': number;
}

export const ProjectSummaryDtoStatusEnum = {
    OPEN: 'OPEN',
    IN_PROGRESS: 'IN_PROGRESS',
    COMPLETED: 'COMPLETED',
    CANCELLED: 'CANCELLED'
} as const;

export type ProjectSummaryDtoStatusEnum = typeof ProjectSummaryDtoStatusEnum[keyof typeof ProjectSummaryDtoStatusEnum];


